name: CI Tests

on:
  pull_request:
  push:
    branches:
      - master

env:
  TEST_TAG: ci_test

jobs:

  reset_test_branches:
    runs-on: ubuntu-latest
    name: Reset test branches
    steps:
    - name: Checkout action repo
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.CI_RESET_TEST_BRANCHES }}
        fetch-depth: 0

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Reset branches
      run: |
        python -m pip install -U pip
        pip install requests

        python -c "import requests; requests.delete('https://api.github.com/repos/CasperWA/push-protected/branches/protected/protection/enforce_admins', headers={'Authorization': 'token ${{ secrets.CI_RESET_TEST_BRANCHES }}', 'Accept': 'application/vnd.github.v3+json'})"

        git fetch origin
        git push -d origin ${TEST_TAG} || :

        git branch not_protected origin/not_protected
        git branch protected origin/protected

        git checkout not_protected
        git reset --hard ${{ github.sha }}
        git push -f

        git checkout protected
        git reset --hard ${{ github.sha }}
        git push -f

        python -c "import requests; requests.post('https://api.github.com/repos/CasperWA/push-protected/branches/protected/protection/enforce_admins', headers={'Authorization': 'token ${{ secrets.CI_RESET_TEST_BRANCHES }}', 'Accept': 'application/vnd.github.v3+json'})"

  not_protected:
    needs: reset_test_branches
    runs-on: ubuntu-latest
    name: Testing - non-protected

    steps:
    - name: Use local action (checkout)
      uses: actions/checkout@v2

    - name: Perform changes
      run: ./ci.sh ${TEST_TAG}
      working-directory: .github/utils

    - name: Pushing to a non-protected branch
      uses: ./
      with:
        token: '${{ secrets.GITHUB_TOKEN }}'
        branch: not_protected
        unprotect_reviews: false

    - name: Check tags (local)
      run: |
        rm -rf .git/refs/push-action*
        git remote prune origin
        sudo git gc --prune=now
        git fetch origin -ftp
        git ls-remote --tags origin | grep "${TEST_TAG}" && exit 1 || echo "Tag ${TEST_TAG} doesn't exist on remote as expected."
        git tag -l | grep "${TEST_TAG}"

    - name: Pushing to a non-protected branch (including tags)
      uses: ./
      with:
        token: '${{ secrets.GITHUB_TOKEN }}'
        branch: not_protected
        unprotect_reviews: false
        tags: true

    - name: Check tags (local+remote)
      run: |
        rm -rf .git/refs/push-action*
        git remote prune origin
        sudo git gc --prune=now
        git fetch origin -ftpP
        git ls-remote --tags origin | grep "${TEST_TAG}"
        git tag -l | grep "${TEST_TAG}"

  protected:
    needs: [reset_test_branches, not_protected]
    runs-on: ubuntu-latest
    name: Testing - protected
    steps:
    - name: Use local action (checkout)
      uses: actions/checkout@v2

    - name: Perform changes
      run: ./ci.sh
      working-directory: .github/utils

    - name: Pushing to a protected branch
      uses: ./
      with:
        token: '${{ secrets.CI_PUSH_TO_PROTECTED_BRANCH }}'
        branch: protected
        unprotect_reviews: true

    - name: Pushing to a protected branch without any changes
      uses: ./
      with:
        token: '${{ secrets.CI_PUSH_TO_PROTECTED_BRANCH }}'
        branch: protected
        unprotect_reviews: true

  force-pushing:
    needs: [protected]
    runs-on: ubuntu-latest
    name: Testing - protected (--force)
    steps:
    - name: Use local action (checkout)
      uses: actions/checkout@v2

    - name: Perform non-fast-forwardable changes
      run: |
        git config --global user.email "casper+github@welzel.nu"
        git config --global user.name "Casper Welzel Andersen"

        git fetch origin
        git reset --hard ${{ github.sha }}
        touch test.txt
        git add test.txt
        git commit -m "Diverged from remote branch"

    - name: Push not using `--force` (should fail)
      id: push_no_force
      continue-on-error: true
      uses: ./
      with:
        token: '${{ secrets.CI_PUSH_TO_PROTECTED_BRANCH }}'
        branch: protected
        unprotect_reviews: true

    - name: This runs ONLY if the previous step doesn't fail
      if: steps.push_no_force.outcome != 'failure' || steps.push_no_force.conclusion != 'success'
      run: |
        echo "Outcome: ${{ steps.push_no_force.outcome }} (not 'failure'), Conclusion: ${{ steps.push_no_force.conclusion }} (not 'success')"
        exit 1

    - name: Push using `--force` (should succeed)
      uses: ./
      with:
        token: '${{ secrets.CI_PUSH_TO_PROTECTED_BRANCH }}'
        branch: protected
        unprotect_reviews: true
        force: yes

  reset_test_branches_v1:
    needs: [not_protected, protected, force-pushing]
    runs-on: ubuntu-latest
    name: Reset test branches - v1
    steps:
    - name: Checkout action repo
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.CI_RESET_TEST_BRANCHES }}
        fetch-depth: 0

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Reset branches
      run: |
        python -m pip install -U pip
        pip install requests

        python -c "import requests; requests.delete('https://api.github.com/repos/CasperWA/push-protected/branches/protected/protection/enforce_admins', headers={'Authorization': 'token ${{ secrets.CI_RESET_TEST_BRANCHES }}', 'Accept': 'application/vnd.github.v3+json'})"

        git fetch origin
        git push -d origin ${TEST_TAG} || :

        git branch not_protected origin/not_protected
        git branch protected origin/protected

        git checkout not_protected
        git reset --hard ${{ github.sha }}
        git push -f

        git checkout protected
        git reset --hard ${{ github.sha }}
        git push -f

        python -c "import requests; requests.post('https://api.github.com/repos/CasperWA/push-protected/branches/protected/protection/enforce_admins', headers={'Authorization': 'token ${{ secrets.CI_RESET_TEST_BRANCHES }}', 'Accept': 'application/vnd.github.v3+json'})"

  not_protected_v1:
    needs: reset_test_branches_v1
    runs-on: ubuntu-latest
    name: Testing - non-protected - v1

    steps:
    - name: Use local action (checkout)
      uses: actions/checkout@v1

    - name: Perform changes
      run: ./ci.sh ${TEST_TAG}
      working-directory: .github/utils

    - name: Pushing to a non-protected branch
      uses: ./
      with:
        token: '${{ secrets.GITHUB_TOKEN }}'
        branch: not_protected
        unprotect_reviews: false

    - name: Check tags (local)
      run: |
        rm -rf .git/refs/push-action*
        git remote prune origin
        sudo git gc --prune=now
        git fetch origin -ftp
        git ls-remote --tags origin | grep "${TEST_TAG}" && exit 1 || echo "Tag ${TEST_TAG} doesn't exist on remote as expected."
        git tag -l | grep "${TEST_TAG}"

    - name: Pushing to a non-protected branch (including tags)
      uses: ./
      with:
        token: '${{ secrets.GITHUB_TOKEN }}'
        branch: not_protected
        unprotect_reviews: false
        tags: true

    - name: Check tags (local+remote)
      run: |
        rm -rf .git/refs/push-action*
        git remote prune origin
        sudo git gc --prune=now
        git fetch origin -ftpP
        git ls-remote --tags origin | grep "${TEST_TAG}"
        git tag -l | grep "${TEST_TAG}"

  protected_v1:
    needs: [reset_test_branches_v1, not_protected_v1]
    runs-on: ubuntu-latest
    name: Testing - protected - v1
    steps:
    - name: Use local action (checkout)
      uses: actions/checkout@v1

    - name: Perform changes
      run: ./ci.sh
      working-directory: .github/utils

    - name: Pushing to a protected branch
      uses: ./
      with:
        token: '${{ secrets.CI_PUSH_TO_PROTECTED_BRANCH }}'
        branch: protected
        unprotect_reviews: true

    - name: Pushing to a protected branch without any changes
      uses: ./
      with:
        token: '${{ secrets.CI_PUSH_TO_PROTECTED_BRANCH }}'
        branch: protected

  force-pushing_v1:
    needs: [protected_v1]
    runs-on: ubuntu-latest
    name: Testing - protected (--force) - v1
    steps:
    - name: Use local action (checkout)
      uses: actions/checkout@v1

    - name: Perform non-fast-forwardable changes
      run: |
        git config --global user.email "casper+github@welzel.nu"
        git config --global user.name "Casper Welzel Andersen"

        git fetch origin
        git reset --hard ${{ github.sha }}
        touch test.txt
        git add test.txt
        git commit -m "Diverged from remote branch"

    - name: Push not using `--force` (should fail)
      id: push_no_force
      continue-on-error: true
      uses: ./
      with:
        token: '${{ secrets.CI_PUSH_TO_PROTECTED_BRANCH }}'
        branch: protected
        unprotect_reviews: true

    - name: This runs ONLY if the previous step doesn't fail
      if: steps.push_no_force.outcome != 'failure' || steps.push_no_force.conclusion != 'success'
      run: |
        echo "Outcome: ${{ steps.push_no_force.outcome }} (not 'failure'), Conclusion: ${{ steps.push_no_force.conclusion }} (not 'success')"
        exit 1

    - name: Push using `--force` (should succeed)
      uses: ./
      with:
        token: '${{ secrets.CI_PUSH_TO_PROTECTED_BRANCH }}'
        branch: protected
        unprotect_reviews: true
        force: yes
